#include <cmath>
#include <GL/glut.h>

class Canvas {
public:
    int width, height;

    Canvas(int width, int height) : width(width), height(height) {}

    void initialize() {
        glClearColor(1.0, 1.0, 1.0, 0.0);
        glMatrixMode(GL_PROJECTION);
        glOrtho(0, width, 0, height, -1.0, 1.0);
    }

    class Point {
    public:
        float x, y;

        void set(float newX, float newY) {
            x = newX;
            y = newY;
        }
    };

    Point CP;

    void moveTo(float x, float y) {
        glBegin(GL_LINE_LOOP);
        glVertex2f(x, y);
        CP.set(x, y);
    }

    void lineTo(float x, float y) {
        glVertex2f(x, y);
        CP.set(x, y);
    }

    void moveRel(float dx, float dy);

    void lineRel(float dx, float dy);

    void display() {
        glClear(GL_COLOR_BUFFER_BIT);
        glColor3f(0.0, 0.0, 1.0);
    }
};

Canvas cvs(700, 400);

void arrow(float f, float h, float t, float w) {
      cvs.lineRel(-w - t / 2, -f); // 1st => / 
      cvs.lineRel(w, 0);// 2nd -
      cvs.lineRel(0, -h);// 3rd |
      cvs.lineRel(-w, 0);// 4th -
      cvs.lineRel(w + t / 2, -f+20);// 5th \.
      cvs.lineRel(w + t / 2, f-20); // 6th /
      cvs.lineRel(-w, 0);// 7th -
      cvs.lineRel(0, h); // 8th |
      cvs.lineRel(w, 0);// 9th -
	  cvs.lineRel(-w - t / 2, f); // 10th \.
}

void Canvas :: moveRel(float dx, float dy) {// :: scope resolution operator 
    CP.set(CP.x + dx, CP.y + dy);
}
void Canvas :: lineRel(float dx, float dy)
{
    float x = CP.x + dx, y = CP.y + dy;
    lineTo(x, y);
    CP.set(x, y);
}


void display() {
    cvs.display();
    cvs.moveTo(350.0, 300.0);
    arrow(100.0, 120.0, 100.0, 120.0);
    glEnd();  // Add this line to end the GL_LINE_LOOP
    glFlush();
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(cvs.width, cvs.height);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Arrow  Drawing");

    cvs.initialize();

    glutDisplayFunc(display);

    glutMainLoop();

    return 0;
}